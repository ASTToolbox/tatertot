on: [push]

jobs:
  build:
    name: "ðŸ¥” Build Static Tatertot"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - run: npm ci
    - run: node ./src/index.js
    - run: git config --global "user.name" "ðŸ¥” Tatertot Action" && git add . && git commit -m "ðŸ¥” Tatertot build complete!"
  commit:
    name: "ðŸ¥” Commit to repository"
    runs-on: ubuntu-latest
    steps:
    - uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
      with:
        # The arguments for the `git add` command (see the paragraph below for more info)
        # Default: '.'
        add: '.'

        # Determines the way the action fills missing author name and email. Three options are available:
        # - github_actor -> UserName <UserName@users.noreply.github.com>
        # - user_info -> Your Display Name <your-actual@email.com>
        # - github_actions -> github-actions <email associated with the github logo>
        # Default: github_actor
        default_author: github_actions

        # Arguments for the git fetch command. If set to false, the action won't fetch the repo.
        # For more info as to why fetching is usually recommended, please see the "Performance on large repos" FAQ. 
        # Default: --tags --force
        fetch: false

        # The message for the commit.
        # Default: 'Commit from GitHub Actions (name of the workflow)'
        message: 'ðŸ¥” Update Tatertot Static Site'

        # The way the action should handle pathspec errors from the add and remove commands. Three options are available:
        # - ignore -> errors will be logged but the step won't fail
        # - exitImmediately -> the action will stop right away, and the step will fail
        # - exitAtEnd -> the action will go on, every pathspec error will be logged at the end, the step will fail.
        # Default: ignore
        pathspec_error_handling: ignore

        # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
        # Default: true
        push: true
